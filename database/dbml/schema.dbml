// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table users {
  id bigint [primary key]
  name varchar
  email varchar [unique]
  phone_number varchar
  password varchar
  avatar varchar
  role enum('user','collector','admin') [default: 'user']
  balance decimal(10,2) [default: 0.00]
  email_verified_at timestamp
  remember_token varchar
  created_at timestamp
  updated_at timestamp
}

Table waste_categories {
  id bigint [primary key]
  name varchar
  type enum('organic','inorganic')
  price_per_kg decimal(10,2)
  image_path varchar
  created_at timestamp
  updated_at timestamp
}

Table transactions {
  id bigint [primary key]
  user_id bigint
  pickup_location varchar
  total_weight decimal(10,2)
  total_price decimal(10,2)
  image_path varchar
  status enum('cart','pending','verified','rejected') [default: 'cart']
  rejection_reason text
  created_at timestamp
  updated_at timestamp
}

Table transaction_details {
  id bigint [primary key]
  transaction_id bigint
  category_id bigint
  estimated_weight int
  actual_weight int
  created_at timestamp
  updated_at timestamp
}

Table balance_histories {
  id bigint [primary key]
  user_id bigint
  amount decimal(10,2)
  transaction_id bigint
  timestamp timestamp
  created_at timestamp
  updated_at timestamp
}

Table withdrawls {
  id bigint [primary key]
  user_id bigint
  amount decimal(10,2)
  status enum('pending','accepted','rejected','expired') [default: 'pending']
  expires_at timestamp
  created_at timestamp
  updated_at timestamp
}

Table personal_access_tokens {
  id bigint [primary key]
  tokenable_type varchar
  tokenable_id bigint
  name varchar
  token varchar [unique]
  abilities text
  last_used_at timestamp
  expires_at timestamp
  created_at timestamp
  updated_at timestamp

  indexes {
    (tokenable_type, tokenable_id)
  }
}

Table password_reset_tokens {
  email varchar [primary key]
  token varchar
  created_at timestamp
}

Table cache {
  key varchar [primary key]
  value mediumtext
  expiration int
}

Table cache_locks {
  key varchar [primary key]
  owner varchar
  expiration int
}

Table jobs {
  id bigint [primary key]
  queue varchar
  payload longtext
  attempts tinyint
  reserved_at int
  available_at int
  created_at int

  indexes {
    queue
  }
}

Table failed_jobs {
  id bigint [primary key]
  uuid varchar [unique]
  connection text
  queue text
  payload longtext
  exception longtext
  failed_at timestamp [default: `CURRENT_TIMESTAMP`]
}

Table job_batches {
  id varchar [primary key]
  name varchar
  total_jobs int
  pending_jobs int
  failed_jobs int
  failed_job_ids longtext
  options mediumtext
  cancelled_at int
  created_at int
  finished_at int
}

Table sessions {
  id varchar [primary key]
  user_id bigint
  ip_address varchar
  user_agent text
  payload longtext
  last_activity int

  indexes {
    user_id
    last_activity
  }
}

// Relationships
Ref: transactions.user_id > users.id [delete: cascade]
Ref: transaction_details.transaction_id > transactions.id [delete: cascade]
Ref: transaction_details.category_id > waste_categories.id [delete: cascade]
Ref: balance_histories.user_id > users.id [delete: cascade]
Ref: balance_histories.transaction_id > transactions.id [delete: set null]
Ref: withdrawls.user_id > users.id [delete: cascade]
Ref: sessions.user_id > users.id 